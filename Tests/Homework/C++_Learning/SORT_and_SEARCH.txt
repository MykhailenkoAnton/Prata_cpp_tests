#include <iostream>
const int SIZE = 5;

// быстрая сортировка
void QuickSort(int arr[], int first, int last)
{
    int middle = arr[(first + last) / 2];
    int i = first;
    int j = last;
    do
    {
        while (arr[i] < middle)
        {
            i++;
        }
        while (arr[j] > middle)
        {
            j--;
        }
        if (i <= j)
        {
            std::swap(arr[i], arr[j]);
            i++;
            j--;
        }
    } while (i <= j);

    if (j > first)
    {
        QuickSort(arr, first, j);
    }
    if (i < last)
    {
        QuickSort(arr, i, last);
    }
    
}

//пузырьковая
int main(){
    
    int arr[SIZE] = {3, 1, 5, 2, 7};
    
    for(int i = 0; i < SIZE; i++)
    {
        for(int j = SIZE - 1; j > i; j--)
        {
            if(arr[j] < arr[j - 1])
            {
                int temp = arr[j];
                arr[j] = arr[j - 1];
                arr[j - 1] = temp;
            }
        }
        
    }
    
    for(int i = 0; i < SIZE; i++)
    {
        std::cout << arr[i] << ' ';
    }
    
    
    return 0;
}

//вставками
void InSort(int * arr, int size)
{
    for(int i = 1; i < size; i++)
    {
        int key = arr[i];
        int j;
        for(j = i - 1; j >= 0 && arr[j] > key; j--)
        {
            arr[j + 1] = arr[j];
        }
          arr[j + 1] = key;
    }
}

// бинарный поиск только после сортировки
bool biSearch(int * arr, int size, int n)
{
    int leftSide = 0;
    int rightSide = size - 1;
    
    while(leftSide <= rightSide)
    {
        int middle = (leftSide + rightSide) / 2;
        if(n == arr[middle])
            return true;
        else if(n > arr[middle])
            leftSide = middle + 1;
        else if(n < arr[middle])
            rightSide = middle - 1;
          
    }
    return false;
}

// линейный поиск
int findN(int * arr, int size, int key);
int main()
{
    int arr[10] = {4, 5, 2, 1, 3, 11, 3, 4, 5, 9};
    std::cout << "Enter a key: ";
    int key;
    std::cin >> key;
    
    int result = findN(arr, 10, key);
    
    if(result != -1)
    {
        std::cout << "Yes its #" << result << std::endl;
    }
    else
    {
        std::cout << "No!\n";
    }
    
    return 0;
}
int findN(int * arr, int size, int key)
{
    for (int i = 0; i < 10; i++)
    {
        if (key == arr[i])
        {
            return i;
        }
    }
    return -1;
}
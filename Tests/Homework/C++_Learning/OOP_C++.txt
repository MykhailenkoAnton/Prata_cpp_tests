Что такое ООП? 
программирование, (Методология программирования)
которое ориентируется на обьекты. Строится на обьектах и классах. Три основных свойства ООП описаны нижею.

есть процедурное програмирование, как язык С, ориентируется на данные и функции обрабатующие данные.
А есть обобщенное програмирование, ориентируется на шаблоны функций и классов (определенный аглоритм для любых типов данных)


Инкапсуляция = сокрытия данных, запрещающая пользователю имзенять данные или код
(или «сокрытие информации») — это процесс скрытого хранения деталей реализации объекта. 
Пользователи обращаются к объекту через открытый интерфейс.
В языке C++ инкапсуляция реализована через спецификаторы доступа.
концепция ООП которая позволяет обьеденять данные и методы их обработки в одну сутность = класс или структура
и защищает их от внешнего вмешательство посредством модификаторов доступа

Полиморфизм = в большей мере относится к виртуальным функциям
Свойство программного кода изменять свое поведение в зависимости от ситуации, возникающей при выполнении программы.
концепция в ООП которая позволяет получать разную реализацию(кода) за одним интерфейсом
ad hoc (overload foo())
параметризованый (шаблоны функций)
полиморфизм подтипов(виртуальные функции)

Наследование = создание одного(производного) класса и его интерфейса, посредством другого(базового)
(механизм, который позволяет наследовать функциональность одного класса или базового класса (base class)
в другом - производном классе (derived class))
концепция ООП которая позволяет создавать новые классы на основании существующих

Абстракция = это использование только тех характеристик объекта, которые с достаточной точностью представляют его в данной системе.
Основная идея состоит в том, чтобы представить объект минимальным набором полей и методов 
и при этом с достаточной точностью для решаемой задачи.
концепция в ООП которая позволяет отсоединять общие признаки разных классов и обьединять их в общем классе


---------------------------------------------------------------------------------------------------------
что такое класс?
класс = тип(тип данных) определенный пользователем

---------------------------------------------------------------------------------------------------------

статический метод класса не имеет указателя this


---------------------------------------------------------------------------------------------------------
explicit

Если спросить C++-программиста о значении ключевого слова explicit, 
большинство ответит, что это ключевое слово ставится перед объявлением конструктора с 
одним параметром (или с большим числом параметров, но когда все параметры, начиная со второго, 
имеют значения по умолчанию) и предотвращает неявное преобразование типов при инициализации.

Помимо этого, начиная с C++11 ключевое слово explicit может 
также применяться к операторам преобразования типа, также запрещая их неявный вызов

В заключение хочется порекомендовать использовать универсальную инициализацию 
в любом новом коде на C++, а также явно объявлять конструкторы explicit всегда, кроме случаев, 
когда неявное преобразование семантически оправдано.


---------------------------------------------------------------------------------------------------------

Зачем нужен виртуальный деструктоор
Деструкторы предназначены для очистки памяти и ресурсов. 
Если деструктор Foo не является виртуальным, то при уничтожении объект Bar все равно будет вызван 
деструктор базового класса Foo. Поэтому деструкторы объявляют виртуальными 
— это гарантирует, что будет вызван деструктор для производного класса.


---------------------------------------------------------------------------------------------------------

Проблема ромбовидного наследования решается ключевым словом virtual
указывается перед наследованием от класса

---------------------------------------------------------------------------------------------------------
Что такое this? это скрытый константный указатель, содержащий адрес объекта, который вызывает метод класса.
Ключевое слово this представляет указатель на текущий объект данного класса. 
Соответственно через this мы можем обращаться внутри класса к любым его членам.


Що таке абстрактний клас і навіщо він?
В об'єктно-орієнтованому програмуванні абстрактний клас – це базовий клас, 
від якого не можна створити екземпляру. 
На практиці абстрактні класи реалізують один з принципів ООП – поліморфізм.
В абстрактному класі можна описати (або не визначити) абстрактні методи та властивості.
Должен содержать как минимум одну чистую виртуальную функцию


---------------------------------------------------------------------------------------------------------

Виртуальная функция в языке С++ — это особый тип функции, которая, при её вызове, 
выполняет «наиболее» дочерний метод, который существует между родительским и дочерними классами. 
Это свойство еще известно, как полиморфизм. Дочерний метод вызывается тогда, когда совпадает сигнатура
(имя, типы параметров и является ли метод константным) и тип возврата дочернего метода с сигнатурой 
и типом возврата метода родительского класса.
Такие методы называются переопределениями (или «переопределенными методами»).
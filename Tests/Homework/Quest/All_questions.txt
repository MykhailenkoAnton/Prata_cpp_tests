У чому полягають основні принципи ООП?
/
ООП = методология програмирования, оринтируется на обьекты и классы
---------------------------------------------------------------------------------------------------------
Що таке складність алгоритму?
/
О-нотация = математически сложность алгоритма. Время выполнения определенных действий и сложность этих действий.
---------------------------------------------------------------------------------------------------------
Код працює неправильно. Що робити?
/
я бы глянул самую первую ошибку, которую показывает аутпут. если нужно отдебажить.
и идти сверху вниз
---------------------------------------------------------------------------------------------------------
Поясніть такі структури даних, як стек і черга.
/
стек = по принципу LIFO (last in first out) елемент который был добавлен в самом конце - выйдет первым
очередь = по принципу очереди в магазин FIFO (fitst in first out) первый пришел = первый вышел
---------------------------------------------------------------------------------------------------------
Які книги, пов’язані з програмуванням, читали? Чого з них навчились?
/
Прата С++ 6 издание С++ ол
Читал книгу про Scrum про методологию управления
Халартон, Брайант = компьютерный системы архитектура и програмирование
С++ для чайников
---------------------------------------------------------------------------------------------------------
Що цікавого знайшли в нових стандартах С++17, С++20?
/ так далеко не заходил, но очень интересно
---------------------------------------------------------------------------------------------------------
Що таке таблиця ASCII?
/
система кодів, у якій числа від 0 до 127 включно поставлені у відповідність літерам, 
цифрам і символам пунктуації.
---------------------------------------------------------------------------------------------------------
Що таке Unicode?
/
промисловий стандарт, 
розроблений, щоб забезпечити цифрове представлення символів усіх писемностей світу та спеціальних символів
---------------------------------------------------------------------------------------------------------
Що таке патерни проєктування та для чого їх використовують?
/
це типовий спосіб вирішення певної проблеми, що часто зустрічається при проектуванні архітектури програм.
На відміну від готових функцій чи бібліотек, патерн не можна просто взяти й скопіювати в програму.
Позволяет создавать новые операции, не меняя классы объектов, над которыми эти операции могут выполняться.
Порождающие, структурные, поведенчиские!
...
---------------------------------------------------------------------------------------------------------
Для чого потрібні модульні тести?
/
Для проверки отдельных частей кода на работаспособность. Жесткие условия проверки определенного участка.
---------------------------------------------------------------------------------------------------------
Яка різниця між модульними та інтеграційними тестами?
/
Модульне тестування складается з одного модулю (частини коду)
Інтеграційне тестування — це тестування частини системи, що складається з двох і більш за модулів.
Основне завдання інтеграційного тестування — пошук дефектів, 
пов’язаних з помилками в реалізації і інтерпретації інтерфейсної взаємодії між модулями.
---------------------------------------------------------------------------------------------------------
Що таке TDD?
/
розробка через тестування. Спочатку тести. Потім код під тести. Потім рефакторінг коду.
---------------------------------------------------------------------------------------------------------
/
---------------------------------------------------------------------------------------------------------
